// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OPS.DAL;

namespace OPS.DAL.Migrations
{
    [DbContext(typeof(OPSCtx))]
    [Migration("20200518153302_AddColumnCode")]
    partial class AddColumnCode
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OPS.BOL.AppelationRome", b =>
                {
                    b.Property<int>("CodeAppelationRome")
                        .HasColumnType("int");

                    b.Property<string>("CodeRome")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("LibelleAppelationRome")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("CodeAppelationRome");

                    b.HasIndex("CodeRome");

                    b.ToTable("AppelationRome");
                });

            modelBuilder.Entity("OPS.BOL.Beneficiaire", b =>
                {
                    b.Property<string>("MatriculeBeneficiaire")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("CodePostal")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("CodeTitreCivilite")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateNaissanceBeneficiaire")
                        .HasColumnType("date");

                    b.Property<string>("IdPays2")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Ligne1Adresse")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Ligne2Adresse")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Ligne3Adresse")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("MailBeneficiaire")
                        .HasColumnType("varchar(254)")
                        .HasMaxLength(254)
                        .IsUnicode(false);

                    b.Property<string>("NomBeneficiaire")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PathPhoto")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PrenomBeneficiaire")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TelBeneficiaire")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Ville")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("MatriculeBeneficiaire");

                    b.HasIndex("CodeTitreCivilite");

                    b.ToTable("Beneficiaire");
                });

            modelBuilder.Entity("OPS.BOL.BeneficiaireOffreFormation", b =>
                {
                    b.Property<string>("MatriculeBeneficiaire")
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.Property<string>("Idetablissement")
                        .HasColumnName("IDEtablissement")
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Certifie")
                        .HasColumnType("char(3)")
                        .HasDefaultValueSql("('ANT')")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<DateTime>("DateEntreeBeneficiaire")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateSortieBeneficiaire")
                        .HasColumnType("date");

                    b.HasKey("MatriculeBeneficiaire", "IdOffreFormation", "Idetablissement");

                    b.HasIndex("Certifie");

                    b.HasIndex("IdOffreFormation", "Idetablissement");

                    b.ToTable("Beneficiaire_OffreFormation");
                });

            modelBuilder.Entity("OPS.BOL.CampagneMail", b =>
                {
                    b.Property<int>("IdCampagneMail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdEtablissement")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.Property<int>("IdQuestionnaire")
                        .HasColumnType("int");

                    b.HasKey("IdCampagneMail");

                    b.HasIndex("IdOffreFormation", "IdEtablissement");

                    b.ToTable("CampagneMail");
                });

            modelBuilder.Entity("OPS.BOL.ChampProfessionnnel", b =>
                {
                    b.Property<string>("IdChampProfessionnel")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("LibelleChampProfessionnel")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("IdChampProfessionnel");

                    b.ToTable("ChampProfessionnnel");
                });

            modelBuilder.Entity("OPS.BOL.CollaborateurAfpa", b =>
                {
                    b.Property<string>("MatriculeCollaborateurAfpa")
                        .HasColumnType("char(7)")
                        .IsFixedLength(true)
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.Property<int>("CodeTitreCivilite")
                        .HasColumnType("int");

                    b.Property<string>("IdEtablissement")
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int?>("IdFonction")
                        .HasColumnType("int");

                    b.Property<string>("MailCollaborateurAfpa")
                        .HasColumnType("varchar(254)")
                        .HasMaxLength(254)
                        .IsUnicode(false);

                    b.Property<string>("NomCollaborateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PrenomCollaborateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TelCollaborateurAfpa")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Uo")
                        .HasColumnName("UO")
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("MatriculeCollaborateurAfpa")
                        .HasName("PK_CollaborateurAfpa_1");

                    b.HasIndex("CodeTitreCivilite");

                    b.HasIndex("IdEtablissement");

                    b.HasIndex("IdFonction");

                    b.HasIndex("Uo");

                    b.ToTable("CollaborateurAfpa");
                });

            modelBuilder.Entity("OPS.BOL.Contrat", b =>
                {
                    b.Property<int>("IdContrat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodeAppellation")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEntreeFonction")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateSortieFonction")
                        .HasColumnType("date");

                    b.Property<int>("DureeContratMois")
                        .HasColumnType("int");

                    b.Property<bool>("EnLienMetierFormation")
                        .HasColumnType("bit");

                    b.Property<int>("IdEntreprise")
                        .HasColumnType("int");

                    b.Property<string>("LibelleFonction")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("MatriculeBeneficiaire")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("TypeContrat")
                        .HasColumnType("int");

                    b.HasKey("IdContrat");

                    b.HasIndex("IdEntreprise");

                    b.HasIndex("MatriculeBeneficiaire");

                    b.HasIndex("TypeContrat");

                    b.ToTable("Contrat");
                });

            modelBuilder.Entity("OPS.BOL.DestinataireEnquete", b =>
                {
                    b.Property<Guid>("IdSoumissionnaire")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Agrege")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('0')");

                    b.Property<DateTime>("DateEcheanceEnquete")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateRealisationEnquete")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateRelance1")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateRelance2")
                        .HasColumnType("date");

                    b.Property<bool?>("EnEmploi")
                        .HasColumnType("bit");

                    b.Property<int?>("EtapeQuestionnaire")
                        .HasColumnType("int");

                    b.Property<int>("EtatTraitementQuestionnaire")
                        .HasColumnType("int");

                    b.Property<int?>("IdContrat")
                        .HasColumnType("int");

                    b.Property<string>("IdEtablissement")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.Property<int>("IdPlanificationCampagneMail")
                        .HasColumnType("int");

                    b.Property<string>("MatriculeBeneficiaire")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .IsFixedLength(true)
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("IdSoumissionnaire");

                    b.HasIndex("IdContrat");

                    b.HasIndex("IdPlanificationCampagneMail");

                    b.HasIndex("MatriculeBeneficiaire");

                    b.ToTable("DestinataireEnquete");
                });

            modelBuilder.Entity("OPS.BOL.DomaineMetierRome", b =>
                {
                    b.Property<string>("CodeDomaineRome")
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("CodeFamilleRome")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("IntituleDomaineRome")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("CodeDomaineRome");

                    b.HasIndex("CodeFamilleRome");

                    b.ToTable("DomaineMetierRome");
                });

            modelBuilder.Entity("OPS.BOL.Entreprise", b =>
                {
                    b.Property<int>("IdEntreprise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Idpays2")
                        .IsRequired()
                        .HasColumnName("IDPays2")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Ligne1Adresse")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Ligne2Adresse")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Ligne3Adresse")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("MailEntreprise")
                        .HasColumnType("varchar(254)")
                        .HasMaxLength(254)
                        .IsUnicode(false);

                    b.Property<string>("NumeroSiret")
                        .IsRequired()
                        .HasColumnName("NumeroSIRET")
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("RaisonSociale")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("TelEntreprise")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("IdEntreprise");

                    b.HasIndex("Idpays2");

                    b.ToTable("Entreprise");
                });

            modelBuilder.Entity("OPS.BOL.Etablissement", b =>
                {
                    b.Property<string>("IdEtablissement")
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdEtablissementRattachement")
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Ligne1Adresse")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Ligne2Adresse")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Ligne3Adresse")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("MailEtablissement")
                        .HasColumnType("varchar(254)")
                        .HasMaxLength(254)
                        .IsUnicode(false);

                    b.Property<string>("NomEtablissement")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TelEtablissement")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("IdEtablissement")
                        .HasName("PK_Etablissement_1");

                    b.HasIndex("IdEtablissementRattachement");

                    b.ToTable("Etablissement");
                });

            modelBuilder.Entity("OPS.BOL.FamilleMetierRome", b =>
                {
                    b.Property<string>("CodeFamilleMetierRome")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("IntituleFamilleMetierRome")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("CodeFamilleMetierRome");

                    b.ToTable("FamilleMetierRome");
                });

            modelBuilder.Entity("OPS.BOL.OffreFormation", b =>
                {
                    b.Property<int>("IdOffreFormation")
                        .HasColumnType("int");

                    b.Property<string>("IdEtablissement")
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("CodeProduitFormation")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebutOffreFormation")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateFinOffreFormation")
                        .HasColumnType("date");

                    b.Property<string>("LibelleOffreFormation")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("LibelleReduitOffreFormation")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("MatriculeCollaborateurAfpa")
                        .HasColumnType("char(7)")
                        .IsFixedLength(true)
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.HasKey("IdOffreFormation", "IdEtablissement");

                    b.HasIndex("CodeProduitFormation");

                    b.HasIndex("IdEtablissement");

                    b.HasIndex("MatriculeCollaborateurAfpa");

                    b.ToTable("OffreFormation");
                });

            modelBuilder.Entity("OPS.BOL.Pays", b =>
                {
                    b.Property<string>("Idpays2")
                        .HasColumnName("IDPays2")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Idpays3")
                        .IsRequired()
                        .HasColumnName("IDPays3")
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<int>("IdpaysNum")
                        .HasColumnName("IDPaysNum")
                        .HasColumnType("int");

                    b.Property<string>("LibellePays")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Idpays2");

                    b.ToTable("Pays");
                });

            modelBuilder.Entity("OPS.BOL.PlanificationCampagneMail", b =>
                {
                    b.Property<int>("IdPlanificationCampagneMail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateRealisation")
                        .HasColumnType("date");

                    b.Property<DateTime>("Echeance")
                        .HasColumnType("date");

                    b.Property<int>("EtatTraitement")
                        .HasColumnType("int");

                    b.Property<int>("IdCampagneMail")
                        .HasColumnType("int");

                    b.Property<int>("NombreDestinataires")
                        .HasColumnType("int");

                    b.Property<int>("NombreEnvois")
                        .HasColumnType("int");

                    b.Property<int>("NombreReponses")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("IdPlanificationCampagneMail")
                        .HasName("PK_PlanificationCampagne");

                    b.HasIndex("IdCampagneMail");

                    b.ToTable("PlanificationCampagneMail");
                });

            modelBuilder.Entity("OPS.BOL.ProduitFormation", b =>
                {
                    b.Property<int>("CodeProduitFormation")
                        .HasColumnType("int");

                    b.Property<bool>("FormationContinue")
                        .HasColumnType("bit");

                    b.Property<bool>("FormationDiplomante")
                        .HasColumnType("bit");

                    b.Property<string>("LibelleCourtFormation")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("LibelleProduitFormation")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("NiveauFormation")
                        .HasColumnType("nchar(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5);

                    b.HasKey("CodeProduitFormation")
                        .HasName("PK_ProduitDeFormation");

                    b.ToTable("ProduitFormation");
                });

            modelBuilder.Entity("OPS.BOL.ProduitFormationAppellationRome", b =>
                {
                    b.Property<int>("CodeProduitFormation")
                        .HasColumnType("int");

                    b.Property<string>("CodeRome")
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("CodeProduitFormation", "CodeRome");

                    b.HasIndex("CodeRome");

                    b.ToTable("ProduitFormation_AppellationRome");
                });

            modelBuilder.Entity("OPS.BOL.Questionnaire", b =>
                {
                    b.Property<int?>("IdQuestionnaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodeProduitFormation")
                        .HasColumnType("int");

                    b.Property<string>("DataJson")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("EtatQuestionnaire")
                        .HasColumnType("int");

                    b.Property<string>("TitreQuestionnaire")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("IdQuestionnaire");

                    b.HasIndex("CodeProduitFormation");

                    b.ToTable("Questionnaire");
                });

            modelBuilder.Entity("OPS.BOL.ResultatCertification", b =>
                {
                    b.Property<string>("CodeResultatCertification")
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("LibelleResultatCertification")
                        .IsRequired()
                        .HasColumnType("char(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("CodeResultatCertification");

                    b.ToTable("ResultatCertification");
                });

            modelBuilder.Entity("OPS.BOL.Rome", b =>
                {
                    b.Property<string>("CodeRome")
                        .HasColumnType("char(5)")
                        .IsFixedLength(true)
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CodeDomaineRome")
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("IntituleCodeRome")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("CodeRome")
                        .HasName("PK_CodeRome");

                    b.HasIndex("CodeDomaineRome");

                    b.ToTable("Rome");
                });

            modelBuilder.Entity("OPS.BOL.TitreCivilite", b =>
                {
                    b.Property<int>("CodeTitreCivilite")
                        .HasColumnType("int");

                    b.Property<string>("TitreCiviliteAbrege")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("TitreCiviliteComplet")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("CodeTitreCivilite");

                    b.ToTable("TitreCivilite");
                });

            modelBuilder.Entity("OPS.BOL.TypeContrat", b =>
                {
                    b.Property<int>("IdTypeContrat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DesignationTypeContrat")
                        .IsRequired()
                        .HasColumnName("designationTypeContrat")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("IdTypeContrat");

                    b.ToTable("TypeContrat");
                });

            modelBuilder.Entity("OPS.BOL.TypeFonction", b =>
                {
                    b.Property<int>("IdFonction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LibelleFonction")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("IdFonction");

                    b.ToTable("TypeFonction");
                });

            modelBuilder.Entity("OPS.BOL.UniteOrganisationnelle", b =>
                {
                    b.Property<string>("Uo")
                        .HasColumnName("UO")
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("LibelleUo")
                        .IsRequired()
                        .HasColumnName("LibelleUO")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("Uo");

                    b.ToTable("UniteOrganisationnelle");
                });

            modelBuilder.Entity("OPS.BOL.UoChampProfessionnel", b =>
                {
                    b.Property<string>("Uo")
                        .HasColumnName("UO")
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("IdChampProfessionnel")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.HasKey("Uo", "IdChampProfessionnel");

                    b.HasIndex("IdChampProfessionnel");

                    b.ToTable("Uo_ChampProfessionnel");
                });

            modelBuilder.Entity("OPS.BOL.WAgrOffreFormation", b =>
                {
                    b.Property<int>("IdPlanificationCampagneMail")
                        .HasColumnType("int");

                    b.Property<string>("NumOrdre")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("IdCampagneMail")
                        .HasColumnType("int");

                    b.Property<int>("IdQuestionnaire")
                        .HasColumnType("int");

                    b.Property<int>("NombreEnvois")
                        .HasColumnType("int");

                    b.Property<int>("NombreReponses")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Valeurs")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("IdPlanificationCampagneMail", "NumOrdre")
                        .HasName("FK_W_AGR_OffreFormation");

                    b.ToTable("W_AGR_OffreFormation");
                });

            modelBuilder.Entity("OPS.BOL.WAgrQuestionnaire", b =>
                {
                    b.Property<int>("IdQuestionnaire")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("NumOrdre")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("NombreEnvois")
                        .HasColumnType("int");

                    b.Property<int>("NombreReponses")
                        .HasColumnType("int");

                    b.Property<string>("Valeurs")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("IdQuestionnaire", "Type", "NumOrdre");

                    b.ToTable("W_AGR_Questionnaire");
                });

            modelBuilder.Entity("OPS.BOL.WReponse", b =>
                {
                    b.Property<int>("IdQuestion")
                        .HasColumnType("int");

                    b.Property<int>("IdQuestionnaire")
                        .HasColumnType("int");

                    b.Property<Guid>("IdSoumissionaire")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EtatReponse")
                        .HasColumnType("int");

                    b.Property<string>("RawValue")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("IdQuestion", "IdQuestionnaire", "IdSoumissionaire");

                    b.ToTable("W_Reponse");
                });

            modelBuilder.Entity("OPS.BOL.AppelationRome", b =>
                {
                    b.HasOne("OPS.BOL.Rome", "CodeRomeNavigation")
                        .WithMany("AppelationRome")
                        .HasForeignKey("CodeRome")
                        .HasConstraintName("FK_AppelationRome_CodeRome")
                        .IsRequired();
                });

            modelBuilder.Entity("OPS.BOL.Beneficiaire", b =>
                {
                    b.HasOne("OPS.BOL.TitreCivilite", "CodeTitreCiviliteNavigation")
                        .WithMany("Beneficiaire")
                        .HasForeignKey("CodeTitreCivilite")
                        .HasConstraintName("FK_Beneficiaire_TitreCivilite")
                        .IsRequired();
                });

            modelBuilder.Entity("OPS.BOL.BeneficiaireOffreFormation", b =>
                {
                    b.HasOne("OPS.BOL.ResultatCertification", "CertifieNavigation")
                        .WithMany("BeneficiaireOffreFormation")
                        .HasForeignKey("Certifie")
                        .HasConstraintName("FK_Beneficiaire_OffreFormation_ResultatCertification");

                    b.HasOne("OPS.BOL.Beneficiaire", "MatriculeBeneficiaireNavigation")
                        .WithMany("BeneficiaireOffreFormation")
                        .HasForeignKey("MatriculeBeneficiaire")
                        .HasConstraintName("FK_Beneficiaire_OffreFormation_Beneficiaire")
                        .IsRequired();

                    b.HasOne("OPS.BOL.OffreFormation", "Id")
                        .WithMany("BeneficiaireOffreFormation")
                        .HasForeignKey("IdOffreFormation", "Idetablissement")
                        .HasConstraintName("FK_Beneficiaire_OffreFormation_OffreFormation")
                        .IsRequired();
                });

            modelBuilder.Entity("OPS.BOL.CampagneMail", b =>
                {
                    b.HasOne("OPS.BOL.OffreFormation", "Id")
                        .WithMany("CampagneMail")
                        .HasForeignKey("IdOffreFormation", "IdEtablissement")
                        .HasConstraintName("FK_CampagneMail_OffreFormation")
                        .IsRequired();
                });

            modelBuilder.Entity("OPS.BOL.CollaborateurAfpa", b =>
                {
                    b.HasOne("OPS.BOL.TitreCivilite", "CodeTitreCiviliteNavigation")
                        .WithMany("CollaborateurAfpa")
                        .HasForeignKey("CodeTitreCivilite")
                        .HasConstraintName("FK_CollaborateurAfpa_TitreCivilite")
                        .IsRequired();

                    b.HasOne("OPS.BOL.Etablissement", "IdEtablissementNavigation")
                        .WithMany("CollaborateurAfpa")
                        .HasForeignKey("IdEtablissement")
                        .HasConstraintName("FK_CollaborateurAfpa_Etablissement");

                    b.HasOne("OPS.BOL.TypeFonction", "IdFonctionNavigation")
                        .WithMany("CollaborateurAfpa")
                        .HasForeignKey("IdFonction")
                        .HasConstraintName("FK_CollaborateurAfpa_TypeFonction");

                    b.HasOne("OPS.BOL.UniteOrganisationnelle", "UoNavigation")
                        .WithMany("CollaborateurAfpa")
                        .HasForeignKey("Uo")
                        .HasConstraintName("FK_CollaborateurAfpa_UniteOrganisationnelle");
                });

            modelBuilder.Entity("OPS.BOL.Contrat", b =>
                {
                    b.HasOne("OPS.BOL.Entreprise", "IdEntrepriseNavigation")
                        .WithMany("Contrat")
                        .HasForeignKey("IdEntreprise")
                        .HasConstraintName("FK_Contrat_Entreprise")
                        .IsRequired();

                    b.HasOne("OPS.BOL.Beneficiaire", "MatriculeBeneficiaireNavigation")
                        .WithMany("Contrat")
                        .HasForeignKey("MatriculeBeneficiaire")
                        .HasConstraintName("FK_Contrat_Beneficiaire")
                        .IsRequired();

                    b.HasOne("OPS.BOL.TypeContrat", "TypeContratNavigation")
                        .WithMany("Contrat")
                        .HasForeignKey("TypeContrat")
                        .HasConstraintName("FK_Contrat_TypeContrat")
                        .IsRequired();
                });

            modelBuilder.Entity("OPS.BOL.DestinataireEnquete", b =>
                {
                    b.HasOne("OPS.BOL.Contrat", "IdContratNavigation")
                        .WithMany("DestinataireEnquete")
                        .HasForeignKey("IdContrat")
                        .HasConstraintName("FK_DestinataireEnquete_Contrat");

                    b.HasOne("OPS.BOL.PlanificationCampagneMail", "IdPlanificationCampagneMailNavigation")
                        .WithMany("DestinataireEnquete")
                        .HasForeignKey("IdPlanificationCampagneMail")
                        .HasConstraintName("FK_DestinataireEnquete_PlanificationCampagneMail")
                        .IsRequired();

                    b.HasOne("OPS.BOL.Beneficiaire", "MatriculeBeneficiaireNavigation")
                        .WithMany("DestinataireEnquete")
                        .HasForeignKey("MatriculeBeneficiaire")
                        .HasConstraintName("FK_DestinataireEnquete_Beneficiaire")
                        .IsRequired();
                });

            modelBuilder.Entity("OPS.BOL.DomaineMetierRome", b =>
                {
                    b.HasOne("OPS.BOL.FamilleMetierRome", "CodeFamilleRomeNavigation")
                        .WithMany("DomaineMetierRome")
                        .HasForeignKey("CodeFamilleRome")
                        .HasConstraintName("FK_DomaineMetierRome_FamilleMetierRome")
                        .IsRequired();
                });

            modelBuilder.Entity("OPS.BOL.Entreprise", b =>
                {
                    b.HasOne("OPS.BOL.Pays", "Idpays2Navigation")
                        .WithMany("Entreprise")
                        .HasForeignKey("Idpays2")
                        .HasConstraintName("FK_Entreprise_Pays")
                        .IsRequired();
                });

            modelBuilder.Entity("OPS.BOL.Etablissement", b =>
                {
                    b.HasOne("OPS.BOL.Etablissement", "IdEtablissementRattachementNavigation")
                        .WithMany("InverseIdEtablissementRattachementNavigation")
                        .HasForeignKey("IdEtablissementRattachement")
                        .HasConstraintName("FK_Etablissement_Etablissement1");
                });

            modelBuilder.Entity("OPS.BOL.OffreFormation", b =>
                {
                    b.HasOne("OPS.BOL.ProduitFormation", "CodeProduitFormationNavigation")
                        .WithMany("OffreFormation")
                        .HasForeignKey("CodeProduitFormation")
                        .HasConstraintName("FK_OffreFormation_ProduitDeFormation")
                        .IsRequired();

                    b.HasOne("OPS.BOL.Etablissement", "IdEtablissementNavigation")
                        .WithMany("OffreFormation")
                        .HasForeignKey("IdEtablissement")
                        .HasConstraintName("FK_OffreFormation_Etablissement")
                        .IsRequired();

                    b.HasOne("OPS.BOL.CollaborateurAfpa", "MatriculeCollaborateurAfpaNavigation")
                        .WithMany("OffreFormation")
                        .HasForeignKey("MatriculeCollaborateurAfpa")
                        .HasConstraintName("FK_OffreFormation_CollaborateurAfpa");
                });

            modelBuilder.Entity("OPS.BOL.PlanificationCampagneMail", b =>
                {
                    b.HasOne("OPS.BOL.CampagneMail", "IdCampagneMailNavigation")
                        .WithMany("PlanificationCampagneMail")
                        .HasForeignKey("IdCampagneMail")
                        .HasConstraintName("FK_PlanificationCampagneMail_CampagneMail")
                        .IsRequired();
                });

            modelBuilder.Entity("OPS.BOL.ProduitFormationAppellationRome", b =>
                {
                    b.HasOne("OPS.BOL.ProduitFormation", "CodeProduitFormationNavigation")
                        .WithMany("ProduitFormationAppellationRome")
                        .HasForeignKey("CodeProduitFormation")
                        .HasConstraintName("FK_ProduitFormation_AppellationRome_ProduitFormation")
                        .IsRequired();

                    b.HasOne("OPS.BOL.Rome", "CodeRomeNavigation")
                        .WithMany("ProduitFormationAppellationRome")
                        .HasForeignKey("CodeRome")
                        .HasConstraintName("FK_ProduitFormation_AppellationRome_Rome")
                        .IsRequired();
                });

            modelBuilder.Entity("OPS.BOL.Questionnaire", b =>
                {
                    b.HasOne("OPS.BOL.ProduitFormation", "CodeProduitFormationNavigation")
                        .WithMany("Questionnaire")
                        .HasForeignKey("CodeProduitFormation")
                        .HasConstraintName("FK_Questionnaire_ProduitFormation")
                        .IsRequired();
                });

            modelBuilder.Entity("OPS.BOL.Rome", b =>
                {
                    b.HasOne("OPS.BOL.DomaineMetierRome", "CodeDomaineRomeNavigation")
                        .WithMany("Rome")
                        .HasForeignKey("CodeDomaineRome")
                        .HasConstraintName("FK_Rome_DomaineMetierRome");
                });

            modelBuilder.Entity("OPS.BOL.UoChampProfessionnel", b =>
                {
                    b.HasOne("OPS.BOL.ChampProfessionnnel", "IdChampProfessionnelNavigation")
                        .WithMany("UoChampProfessionnel")
                        .HasForeignKey("IdChampProfessionnel")
                        .HasConstraintName("FK_Uo_ChampProfessionnel_ChampProfessionnnel")
                        .IsRequired();

                    b.HasOne("OPS.BOL.UniteOrganisationnelle", "UoNavigation")
                        .WithMany("UoChampProfessionnel")
                        .HasForeignKey("Uo")
                        .HasConstraintName("FK_Uo_ChampProfessionnel_UniteOrganisationnelle")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
