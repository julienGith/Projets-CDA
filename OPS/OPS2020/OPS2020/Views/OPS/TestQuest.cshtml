@model OPS2020.Models.QuestionnaireModel
@{
    ViewData["Title"] = "TestQuest";
}

<style>
    .rotate {
        -moz-transition: all .2s linear;
        -webkit-transition: all .2s linear;
        transition: all .2s linear;
    }

    .questIntitule {
        width: 350px;
        overflow-x: scroll;
        overflow-x: hidden;
    }

    .rotate.down {
        -ms-transform: rotate(180deg);
        -moz-transform: rotate(180deg);
        -webkit-transform: rotate(180deg);
        transform: rotate(180deg);
    }

    ul {
        list-style-type: none;
    }

    a.disabled {
        pointer-events: none;
        cursor: default;
    }

    /*TABS*/
    /* Style the form */
    /*#regForm {
        background-color: #ffffff;
        margin: 100px auto;
        padding: 40px;
        width: 70%;
        min-width: 300px;
    }*/

    /* Style the input fields */
    /*input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: Raleway;
        border: 1px solid #aaaaaa;
    }*/

    /* Mark input boxes that gets an error on validation: */
    input.invalid {
        background-color: #ffdddd;
    }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

        /* Mark the active step: */
        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #4CAF50;
        }
</style>
<div id="enteteDiv" class="row">
    <div class="col align-self-center">
        <div class="jumbotron">
            <img src="~/Images/afpa-logo-cell.png" class="img-fluid"/>
            <p class="lead">Enquête sur l'insertion des anciens stagiaires.</p>
            <p class="lead">@Model.LibelleProduitFormation</p>
        </div>
    </div>
</div>
<div id="question1Div" class="row">
    <div class="col align-self-center">
        <div class="card">
            <div class="card-header">
                Question préliminaire de l'enquête
            </div>
            <div class="card-body">
                <form id="question1Form" class="form-horizontal">
                    <fieldset>
                        <!-- Form Name -->
                        <p>Votre activité professionnelle est-elle en lien avec la formation @Model.LibelleProduitFormation que vous avez suivie ?</p>
                        <!-- Multiple Radios -->
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="radios"></label>
                            <div class="col-md-4">
                                <div class="radio">
                                    <label for="question1oui">
                                        <input type="radio" name="radios" id="question1oui" value="1" required>
                                        Oui
                                    </label>
                                </div>
                                <div class="radio">
                                    <label for="question1non">
                                        <input type="radio" name="radios" id="question1non" value="2">
                                        Non
                                    </label>
                                </div>
                            </div>
                        </div>

                    </fieldset>
                    <button type="button" id="question1Btn" class="btn btn-primary" onclick="etape2wizzard(); return false;">Démarrer</button>
                </form>
                <p id="quest1Fin"> Fin de l'enquête merci pour votre participation</p>
                <div id="feedbackQuest1" class="alert alert-danger" role="alert">
                    Attention vous devez fournir une réponse pour passer à l'étape suivante.
                </div>
            </div>
        </div>
    </div>
</div>
<div id="wizzardQuestDiv" class="row">
    <div class="col align-self-center">
        <div class="card">
            <div class="card-header">
                Ênquête insertion @Model.LibelleProduitFormation
            </div>
            <div class="card-body">
                <div id="previewQuestionnaire">
                    <form id="regForm" action="" class="form-horizontal">
                        <fieldset>
                            <legend id="formName">Form Name</legend>
                            <div id="previewQuestions">


                            </div>
                        </fieldset>
                        <div id="feedback" class="alert alert-danger" role="alert">
                            Attention vous devez fournir une réponse pour passer à l'étape suivante.
                        </div>
                        <div style="overflow:auto;">
                            <div style="float:right;">
                                <button type="button" id="prevBtn" class="btn btn-primary" onclick="nextPrev(-1); return false;">Précédent</button>
                                <button type="submit" id="nextBtn" class="btn btn-primary" onclick="nextPrev(1); return false;">Suivant</button>
                            </div>
                        </div>

                        <!-- Circles which indicates the steps of the form: -->
                        <div id="listCercles" style="text-align:center;margin-top:40px;">

                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<span id="idQuestionnaire" data-count="@Model.questionnaireId"></span>
<script>
    var C = console.log;
    var reponses = [''];
    var reponse = {
        idQuestion: '',
        idQuestionnaire: @Model.questionnaireId,
        idSoumissionnaire: '',
        rawValue: '',
        etat: ''
    };
    var currentTab = 0; // Current tab is set to be the first tab (0)
    // tabs source https://www.w3schools.com/howto/howto_js_form_steps.asp
    function nextPrev(n) {
        $(document.body).ready(function () {
            // This function will figure out which tab to display
            var x = document.getElementsByClassName("tab");
            C("x", x);
            // Exit the function if any field in the current tab is invalid:
            if (n == 1 && !validateForm()) return false;
            // Hide the current tab:
            x[currentTab].style.display = "none";
            // Increase or decrease the current tab by 1:
            currentTab = currentTab + n;
            // if you have reached the end of the form... :
            if (currentTab >= x.length) {
                //...the form gets submitted:
                document.getElementById("regForm").submit();
                return false;
            }
            // Otherwise, display the correct tab:
            showTab(currentTab);
        });

    }
    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, z, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        z = x[currentTab].getElementsByTagName("label");
        k = x[currentTab].getElementsByTagName("option");
        j = x[currentTab].getElementsByTagName("textarea");
        l = x[currentTab].getElementsByTagName("select");

        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {

            if (y[i].checkValidity() === false) {
                y[i].className += " invalid";
                $("#feedback").show();
                valid = false;
            }
        }
        if (l.length>0) {
            if (l[0].checkValidity() === false) {
                l[0].className += " invalid";
                $("#feedback").show();
                valid = false;
            }
        }
        if (j.length>0) {
            if (j[0].checkValidity() === false) {
                j[0].className += " invalid";
                $("#feedback").show();
                valid = false;
            }
        }

        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            C("input", y, "option", k, "textarea", j);
            for (i = 0; i < y.length; i++) {
                reponse.rawValue = y[i].value;
                C(reponse.rawValue);
                if (y[i].checked) {
                    reponse.rawValue = z[i + 1].innerText;
                    reponse.idQuestion = currentTab + 1;
                    reponses.push(reponse);
                    C(reponse.rawValue);
                }

            }
            for (i = 0; i < k.length; i++) {
                if (k[i].selected == true) {
                    reponse.rawValue = k[i].value;
                    reponse.idQuestion = currentTab + 1;
                    reponses.push(reponse);
                    C(reponse.rawValue);
                }
            }
            if (j.length>0) {
                reponse.rawValue = j[0].value;
                reponse.idQuestion = currentTab + 1;
                reponses.push(reponse);
                C(reponse.rawValue);
            }
            $("#feedback").hide();
            document.getElementsByClassName("step")[currentTab].className += " finish";
        }
        return valid; // return the valid status
    }
    function showTab(n) {
        $(document.body).ready(function () {
            C("currentTabIndex", n);
            // This function will display the specified tab of the form ...
            var x = [''];
            x = document.getElementsByClassName("tab");
            C("var tabArray", x);
            x[n].style.display = "block";
            // ... and fix the Previous/Next buttons:
            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }
            if (n == (x.length - 1)) {
                document.getElementById("nextBtn").innerHTML = "Valider";
            } else {
                document.getElementById("nextBtn").innerHTML = "Suivant";
            }
            // ... and run a function that displays the correct step indicator:
            fixStepIndicator(n)
        });

    }
    function fixStepIndicator(n) {
        $(document.body).ready(function () {
            // This function removes the "active" class of all steps...
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            //... and adds the "active" class to the current step:
            x[n].className += " active";
        });

    }
    function etape2wizzard() {
        $(document.body).ready(function () {
            var inputs = document.getElementById("question1Form").getElementsByTagName("input");
            C("inputs", inputs)
            for (var i = 0; i < inputs.length; i++) {
                if (inputs[i].checkValidity() === false) {
                    $("#feedbackQuest1").show();
                }
                else {
                    $("#feedbackQuest1").hide();
                    if ($("#question1oui").prop('checked')) {
                        $("#question1Div").fadeOut(1500);
                        $("#enteteDiv").fadeOut(1500);
                        $("#wizzardQuestDiv").fadeIn(2500); 
                        reponse.rawValue = "Oui";
                        reponse.idQuestion = 0;
                        reponses.push(reponse);
                    }
                }
            }
        });
    }
    $(document.body).on('change', '#question1oui', function () {
        if ($("#question1oui").prop('checked')) {
            $("#question1Btn").fadeIn(1500);

        }
    });
    $(document.body).on('change', '#question1non', function () {
        if ($("#question1non").prop('checked')) {
            $("#question1Form").fadeOut(1500);
            $("#quest1Fin").fadeIn(1500);
            reponse.rawValue = "Non";
            reponse.idQuestion = 0;
            reponses.push(reponse);
        }
    });
    function SaveReponse(reponse) {

        let reponseJson = JSON.stringify(reponse);
            C(questionnaireJson);
        $.ajax({
                url: '@Url.Action("SaveReponse", "OPS")',
            data: { "data": reponseJson },
                type: 'POST',
            dataType: 'application/json',
                success: function (response) {
                    if (response.data != null) {

                    }
                    else {

                    }
                },
                error: function (xhr, status, error) {

                }
        });

    }

    $(document).ready(function () {
       // "use strict";

        var C = console.log;

        var numQuestion = 0;
        var codeQuestion;
        var type;
        var choixRequis;
        var ajoutSupprChoix;
        var questionnaire = {
            codeProduitFormation: '',
            questionnaireId: '',
            titreQuestionnaire: '',
            description: '',
            dataJson: [''],
            etatQuestionnaire: '',
            codeHtml:'',
            listQuestObj: ['']
        }
        $("#feedback").hide();
        $("#feedbackQuest1").hide();
        $("#wizzardQuestDiv").hide();
        $("#quest1Fin").hide();
        $("#question1Btn").hide();
        //Chargement du questionnaire
        $(document.body).ready(function () {

                questionnaire = @Html.Raw(Json.Serialize(Model));
                $("#formName").html(questionnaire.titreQuestionnaire);
                $("#previewQuestions").append(questionnaire.codeHtml);
                C(questionnaire);
                questionnaire.listQuestObj = filter_array_values(questionnaire.listQuestObj);
                for (let x of questionnaire.listQuestObj) {
                    C("Boucle chargement");
                    $("#listCercles").append("<span class='step'></span>")
                }
            //TABS
            showTab(currentTab); // Display the current tab
        })
        function filter_array_values(arr) {
            arr = arr.filter(isEligible);
            return arr;
        }
        function isEligible(value) {
            if (value !== false || value !== null || value !== 0 || value !== "") {
                return value;
            }
        }

    });
</script>
